#!/bin/bash
set -e

init() {
  $([[ $1 == "" ]] && echo ./scripts/help install || echo run $@)
  exit 0
}

run() {
  for cmd in $@; do $cmd; done
}

## Public

#/ homebrews       Installs core homebrew kegs
homebrews() {
  printf "%sInstalling homebrews..\n"
  brew install bash-completion ctags git git-standup heroku hub macvim ripgrep tidy-html5 tree watchman wget yarn
}

#/ nvm             Installs node version manager
nvm() {
  printf "%sInstalling nvm..\n"
  curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
}

#/ node            Installs node and npm
node() {
  printf "%sInstalling node and npm (stable)..\n"
  nvm install stable
  nvm use stable
  nvm alias default stable
}

#/ bash            Installs .bash_profile, .bashrc and .inputrc
bash() {
  for file in "bash_profile" "bashrc" "inputrc"; do
    ln -sfv "`pwd`/$file" $HOME/.$file
  done
}

#/ dots            Installs ~/ .gemrc .gitconfig .gitignore .bundle/
dots() {
  for file in "gitconfig" "gitignore"; do
    ln -sfv "`pwd`/$file" $HOME/.$file
  done
}

#/ locals          Installs ~/ .gitconfig.local
locals() {
  for file in "gitconfig"; do
    ln -sfv "`pwd`/$file.local" $HOME/.$file.local
  done
}

#/ packages        Installs global npm packages
packages() {
  printf "%sInstalling global npm packages..\n"
  npm install eslint_d --global
}

#/ vim             Installs .vimrc, .vim/ and vim-plug
vim() {
  printf "%sInstalling vimfiles..\n"
  if [[ -d $HOME/.vim ]]; then rm -rf $HOME/.vim; fi
  for dir in "tmp/ctrlp" "tmp/swap" "tmp/yankring"; do
    mkdir -pv $HOME/.vim/$dir
  done
  curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  ln -sfv "`pwd`/vimrc" $HOME/.vimrc
  printf "%s----------------------------------------\n"
  printf "%sRun PlugInstall from within Vim\n"
  printf "%s----------------------------------------\n"
}

#/ casks           Installs non App Store Mac applications
casks() {
  printf "%sInstalling homebrew casks..\n"
  brew cask install appcleaner backblaze charles google-chrome gpgtools imageoptim rowanj-gitx shiftit screenhero sketch qlstephen zeplin
}

#/ macos           Setup osx defaults: https://mths.be/osx
macos() {
  # Automatically quit printer app once the print jobs complete
  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

  # Disable press-and-hold for keys in favor of key repeat
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

  # Set a blazingly fast keyboard repeat rate
  defaults write NSGlobalDomain KeyRepeat -int 1
  defaults write NSGlobalDomain InitialKeyRepeat -int 15

  # Save screenshots to the desktop
  defaults write com.apple.screencapture location -string "${HOME}/Desktop"

  # Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
  defaults write com.apple.screencapture type -string "png"

  # Disable shadow in screenshots
  defaults write com.apple.screencapture disable-shadow -bool true

  # Finder: allow text selection in Quick Look
  defaults write com.apple.finder QLEnableTextSelection -bool true

  # Avoid creating .DS_Store files on network volumes
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

  # Show the ~/Library folder
  chflags nohidden ~/Library

  # Make Dock icons of hidden applications translucent
  defaults write com.apple.dock showhidden -bool true
}

#/ world           Runs all of the install commands
world() {
  sudo -v
  bash
  dots
  locals
  packages
  vim
  casks
  macos
}

# go..
init $@
